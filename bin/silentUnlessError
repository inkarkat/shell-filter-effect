#!/bin/bash

: ${SILENTUNLESSERROR_COMMAND_JOINER=;}

printShortUsage()
{
    # Note: short followed by long option; if the user knows the short one, she can
    # skim the long one.
printf 'Usage: %q %s\n' "$(basename "$1")" '-c|--command "COMMANDLINE" [-c ...] | [--] SIMPLECOMMAND [...] [-?|-h|--help]'
}
printUsage()
{
    # This is the short help when launched with no or incorrect arguments.
    # It is printed to stderr to avoid accidental processing.
    printShortUsage "$1" >&2
    printf >&2 '\nTry %q --help for more information.\n' "$(basename "$1")"
}
printLongUsage()
{
    # This is the long "man page" when launched with the help argument.
    # It is printed to stdout to allow paging with 'more'.
    cat <<HELPDESCRIPTION
Execute COMMAND. If it succeeds, its (normal and error) output is suppressed. In
case of an unclean exit, the output is printed.
HELPDESCRIPTION
    echo
    printShortUsage "$1"
    echo
    cat <<HELPTEXT
SEE ALSO:
- chronic COMMAND... (provided by GNU moreutils).
HELPTEXT
}

commands=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)		shift; printLongUsage "$0"; exit 0;;
	--command|-c)		shift; commands+="${commands:+ $SILENTUNLESSERROR_COMMAND_JOINER }$1"; shift;;
	--)			shift; break;;
	-*)			{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)			break;;
    esac
done
if [ $# -ne 0 ]; then
    # Combine --command and SIMPLECOMMAND; need to quote SIMPLECOMMAND to
    # undo the effects of eval.
    printf -v quotedSimpleCommand '%q ' "$@"
    commands+="${commands:+ $SILENTUNLESSERROR_COMMAND_JOINER }${quotedSimpleCommand% }"
fi
if [ -z "$commands" ]; then
    echo >&2 'ERROR: No COMMAND(s) specified; need to pass -c|--command "COMMANDLINE", or SIMPLECOMMAND.'
    exit 2
fi

TMPFILE="$(mktemp --tmpdir "$(basename -- "$0")-XXXXXX" 2>/dev/null || echo "${TMPDIR:-/tmp}/$(basename -- "$0").$$")"
cleanup()
{
    rm -f -- "$TMPFILE" 2>/dev/null
}
trap 'cleanup' EXIT

if (eval "$commands") > "$TMPFILE" 2>&1; then
    :
else
    status=$?
    cat "$TMPFILE"
    exit $status
fi
