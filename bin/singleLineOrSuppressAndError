#!/bin/bash

printShortUsage()
{
    # Note: short followed by long option; if the user knows the short one, she can
    # skim the long one.
    printf 'Usage: %q %s\n' "$(basename "$1")" 'FILE [...] [-?|-h|--help]'
    printf 'Usage: cat FILE [...] | %q\n' "$(basename "$1")"
}
printUsage()
{
    # This is the short help when launched with no or incorrect arguments.
    # It is printed to stderr to avoid accidental processing.
    printShortUsage "$1" >&2
    printf >&2 '\nTry %q --help for more information.\n' "$(basename "$1")"
}
printLongUsage()
{
    # This is the long "man page" when launched with the help argument.
    # It is printed to stdout to allow paging with 'more'.
    cat <<HELPDESCRIPTION
If the input consists of more than a single line or if there's no input at all,
suppress all output and fail.

EXIT STATUS:
    0	Exactly one line (with or without trailing newline) has been encountered
	and printed.
    1	More than one line has been encountered; all output has been suppressed.
    2	Bad invocation, wrong or missing command-line arguments.
    3	Internal error or failed assertion.
    99	No input has been encountered.
HELPDESCRIPTION
    echo
    printShortUsage "$1"
    echo
    cat <<HELPTEXT

HELPTEXT
}
case "$1" in
    --help|-h|-\?)	shift; printLongUsage "$0"; exit 0;;
esac

isEOL=t
if IFS=$'\n' read -r line || { isEOL=; [ -n "$line" ]; }; then
    if IFS=$'\n' read -r ignoredSecondLine; then
	cat >/dev/null
	exit 1
    fi
    printf "%s${isEOL:+\\n}" "$line"
    exit 0
else
    exit 99
fi
